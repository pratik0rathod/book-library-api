"""minior updates

Revision ID: d33ca981c28a
Revises: 6432dfbcb8d9
Create Date: 2024-04-22 16:19:04.903307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd33ca981c28a'
down_revision: Union[str, None] = '6432dfbcb8d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('books', 'created_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('books', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'birth_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('users', 'created_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'birth_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('books', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('books', 'created_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###
